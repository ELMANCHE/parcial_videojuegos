#!/bin/bash

echo "üéÆ COMPILANDO ANGRY BIRDS OPENCV üéÆ"
echo "=================================="
echo "Versi√≥n: 1.0 - Velocidad Optimizada"
echo "Fecha: $(date)"
echo ""

# Verificar requisitos b√°sicos
echo "üîç Verificando requisitos..."
if ! command -v cmake &> /dev/null; then
    echo "‚ùå ERROR: CMake no est√° instalado"
    echo "üí° Instalar con: brew install cmake (macOS) o sudo apt install cmake (Ubuntu)"
    exit 1
fi

if ! pkg-config --exists opencv4 && ! pkg-config --exists opencv; then
    echo "‚ùå ERROR: OpenCV no est√° instalado"
    echo "üí° Instalar con: brew install opencv (macOS) o sudo apt install libopencv-dev (Ubuntu)"
    exit 1
fi

echo "‚úÖ Requisitos verificados"
echo ""

# Crear directorio build si no existe
if [ ! -d "build" ]; then
    echo "üìÅ Creando directorio build..."
    mkdir build
fi

cd build

# Ejecutar CMake
echo "‚öôÔ∏è  Configurando proyecto con CMake..."
cmake ..

if [ $? -eq 0 ]; then
    echo "‚úÖ Configuraci√≥n exitosa!"
    echo ""
    echo "üî® Compilando proyecto..."
    echo "   Usando $(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 4) n√∫cleos de CPU"
    
    # Detectar sistema para usar el comando make apropiado
    if [[ "$OSTYPE" == "darwin"* ]] || [[ "$OSTYPE" == "linux-gnu"* ]]; then
        make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || echo 4)
    else
        make
    fi
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "üéâ ¬°COMPILACI√ìN EXITOSA!"
        echo "=================================="
        echo "üìä Estad√≠sticas:"
        echo "   Ejecutable: $(ls -lh AngryBirdsOpenCV 2>/dev/null | awk '{print $5}' || echo 'No encontrado')"
        echo "   Ubicaci√≥n: $(pwd)/AngryBirdsOpenCV"
        echo ""
        echo "üöÄ Para ejecutar el juego:"
        echo "   Opci√≥n 1: cd .. && ./play.sh"
        echo "   Opci√≥n 2: ./AngryBirdsOpenCV"
        echo ""
        echo "üéÆ CARACTER√çSTICAS DEL JUEGO:"
        echo "   ‚úÖ 3 niveles de dificultad progresiva"
        echo "   ‚úÖ F√≠sica realista con gravedad y colisiones"
        echo "   ‚úÖ Velocidad optimizada (120px/s - perfecta para seguimiento visual)"
        echo "   ‚úÖ Rango de tiro extendido (200px)"
        echo "   ‚úÖ Previsualizaci√≥n precisa de trayectoria"
        echo "=================================="
    else
        echo ""
        echo "‚ùå ERROR EN LA COMPILACI√ìN"
        echo "üîç Posibles soluciones:"
        echo "   1. Verificar que OpenCV est√° correctamente instalado"
        echo "   2. Ejecutar: ./check-requirements.sh"
        echo "   3. Revisar que tienes un compilador C++17"
        exit 1
    fi
else
    echo "‚ùå ERROR EN LA CONFIGURACI√ìN"
    echo "üîç Posibles soluciones:"
    echo "   1. Verificar instalaci√≥n de CMake: cmake --version"
    echo "   2. Verificar instalaci√≥n de OpenCV: pkg-config --modversion opencv4"
    echo "   3. Ejecutar: ./check-requirements.sh"
    exit 1
fi

echo "=================================="